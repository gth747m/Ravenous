// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Ravenous.Models.DbModels;

#nullable disable

namespace Ravenous.Migrations
{
    [DbContext(typeof(RavenousContext))]
    [Migration("20240103160608_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Ravenous.Models.DbModels.Ingredient", b =>
                {
                    b.Property<int>("IngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ingredient_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IngredientId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("IngredientId")
                        .HasName("pk_ingredients");

                    b.ToTable("ingredients", (string)null);
                });

            modelBuilder.Entity("Ravenous.Models.DbModels.IngredientAssignment", b =>
                {
                    b.Property<int>("IngredientAssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ingredient_assignment_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("IngredientAssignmentId"));

                    b.Property<float>("Amount")
                        .HasColumnType("real")
                        .HasColumnName("amount");

                    b.Property<int>("IngredientId")
                        .HasColumnType("integer")
                        .HasColumnName("ingredient_id");

                    b.Property<int>("MeasurementId")
                        .HasColumnType("integer")
                        .HasColumnName("measurement_id");

                    b.Property<int>("RecipeId")
                        .HasColumnType("integer")
                        .HasColumnName("recipe_id");

                    b.HasKey("IngredientAssignmentId")
                        .HasName("pk_ingredient_assignments");

                    b.HasIndex("IngredientId")
                        .HasDatabaseName("ix_ingredient_assignments_ingredient_id");

                    b.HasIndex("MeasurementId")
                        .HasDatabaseName("ix_ingredient_assignments_measurement_id");

                    b.HasIndex("RecipeId")
                        .HasDatabaseName("ix_ingredient_assignments_recipe_id");

                    b.ToTable("ingredient_assignments", (string)null);
                });

            modelBuilder.Entity("Ravenous.Models.DbModels.Instruction", b =>
                {
                    b.Property<int>("InstructionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("instruction_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("InstructionId"));

                    b.Property<int>("Number")
                        .HasColumnType("integer")
                        .HasColumnName("number");

                    b.Property<int>("RecipeId")
                        .HasColumnType("integer")
                        .HasColumnName("recipe_id");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("text");

                    b.HasKey("InstructionId")
                        .HasName("pk_instructions");

                    b.HasIndex("RecipeId")
                        .HasDatabaseName("ix_instructions_recipe_id");

                    b.ToTable("instructions", (string)null);
                });

            modelBuilder.Entity("Ravenous.Models.DbModels.Measurement", b =>
                {
                    b.Property<int>("MeasurementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("measurement_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MeasurementId"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("MeasurementId")
                        .HasName("pk_measurements");

                    b.ToTable("measurements", (string)null);
                });

            modelBuilder.Entity("Ravenous.Models.DbModels.Recipe", b =>
                {
                    b.Property<int>("RecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("recipe_id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("RecipeId"));

                    b.Property<TimeOnly>("CookTime")
                        .HasColumnType("time without time zone")
                        .HasColumnName("cook_time");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<TimeOnly>("PrepTime")
                        .HasColumnType("time without time zone")
                        .HasColumnName("prep_time");

                    b.Property<int>("Rating")
                        .HasColumnType("integer")
                        .HasColumnName("rating");

                    b.HasKey("RecipeId")
                        .HasName("pk_recipes");

                    b.ToTable("recipes", (string)null);
                });

            modelBuilder.Entity("Ravenous.Models.DbModels.IngredientAssignment", b =>
                {
                    b.HasOne("Ravenous.Models.DbModels.Ingredient", "Ingredient")
                        .WithMany("RecipieIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_ingredient_assignments_ingredients_ingredient_id");

                    b.HasOne("Ravenous.Models.DbModels.Measurement", "Measurement")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("MeasurementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_ingredient_assignments_measurements_measurement_id");

                    b.HasOne("Ravenous.Models.DbModels.Recipe", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_ingredient_assignments_recipes_recipe_id");

                    b.Navigation("Ingredient");

                    b.Navigation("Measurement");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Ravenous.Models.DbModels.Instruction", b =>
                {
                    b.HasOne("Ravenous.Models.DbModels.Recipe", "Recipe")
                        .WithMany("Instructions")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_instructions_recipes_recipe_id");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("Ravenous.Models.DbModels.Ingredient", b =>
                {
                    b.Navigation("RecipieIngredients");
                });

            modelBuilder.Entity("Ravenous.Models.DbModels.Measurement", b =>
                {
                    b.Navigation("RecipeIngredients");
                });

            modelBuilder.Entity("Ravenous.Models.DbModels.Recipe", b =>
                {
                    b.Navigation("Instructions");

                    b.Navigation("RecipeIngredients");
                });
#pragma warning restore 612, 618
        }
    }
}
